# This file is auto-generated from the current state of the database. Instead
# of editing this file, please use the migrations feature of ActiveNode to
# incrementally modify your database, and then regenerate this schema definition.
#
# Note that this schema.yml definition is the authoritative source for your
# database schema. If you need to create the application database on another
# system, you should be using neo4j:schema:load, not running all the migrations
# from scratch. The latter is a flawed and unsustainable approach (the more migrations
# you'll amass, the slower it'll run and the greater likelihood for issues).
#
# It's strongly recommended that you check this file into your version control system.

---
:constraints:
- CONSTRAINT ON ( `neo4j::migrations::schemamigration`:`Neo4j::Migrations::SchemaMigration`
  ) ASSERT `neo4j::migrations::schemamigration`.migration_id IS UNIQUE
- CONSTRAINT ON ( age:Age ) ASSERT age.uuid IS UNIQUE
- CONSTRAINT ON ( birthday:Birthday ) ASSERT birthday.uuid IS UNIQUE
- CONSTRAINT ON ( blood:Blood ) ASSERT blood.uuid IS UNIQUE
- CONSTRAINT ON ( faculty:Faculty ) ASSERT faculty.uuid IS UNIQUE
- CONSTRAINT ON ( height:Height ) ASSERT height.uuid IS UNIQUE
- CONSTRAINT ON ( length:Length ) ASSERT length.uuid IS UNIQUE
- CONSTRAINT ON ( number:Number ) ASSERT number.uuid IS UNIQUE
- CONSTRAINT ON ( place:Place ) ASSERT place.uuid IS UNIQUE
- CONSTRAINT ON ( player:Player ) ASSERT player.uuid IS UNIQUE
- CONSTRAINT ON ( position:Position ) ASSERT position.uuid IS UNIQUE
- CONSTRAINT ON ( salary:Salary ) ASSERT salary.uuid IS UNIQUE
- CONSTRAINT ON ( throwbat:Throwbat ) ASSERT throwbat.uuid IS UNIQUE
- CONSTRAINT ON ( type:Type ) ASSERT type.uuid IS UNIQUE
- CONSTRAINT ON ( university:University ) ASSERT university.uuid IS UNIQUE
- CONSTRAINT ON ( weight:Weight ) ASSERT weight.uuid IS UNIQUE
:indexes: []
:versions:
- '20171108071937'
- '20171108072253'
- '20171108072915'
- '20171108075523'
- '20171108075810'
- '20171108080006'
- '20171108080513'
- '20171108080736'
- '20171108080750'
- '20171108090821'
- '20171108090902'
- '20171108090942'
- '20171108091052'
- '20171108093800'
- '20171108094201'
- '20171108120652'
- '20171108120703'
- '20171108120917'
- '20171108121146'
- '20171108122139'
- '20171108122230'
- '20171108122319'
- '20171108122358'
- '20171108123036'
- '20171108123311'
- '20171108123504'
- '20171108123602'
- '20171108123638'
- '20171108123857'
- '20171108124205'
- '20171108125105'
- '20171108125246'
- '20171108125426'
- '20171108125618'
- '20171108125720'
- '20171108130843'
- '20171108130933'
- '20171108131049'
- '20171108131243'
- '20171108131357'
- '20171108131515'
- '20171108131640'
- '20171108131740'
- '20171108132141'
- '20171108132241'
- '20171108132340'
- '20171108132432'
- '20171108132538'
- '20171108132627'
- '20171108132728'
- '20171108132851'
- '20171108132952'
- '20171108133047'
- '20171108133328'
- '20171108133346'
- '20171108133353'
- '20171108133409'
- '20171108133502'
- '20171108133509'
- '20171108133516'
- '20171108133530'
- '20171108133547'
- '20171108141647'
- '20171108141946'
- '20171108142220'
